"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IArbToken__factory = void 0;
var ethers_1 = require("ethers");
var IArbToken__factory = /** @class */ (function () {
    function IArbToken__factory() {
    }
    IArbToken__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return IArbToken__factory;
}());
exports.IArbToken__factory = IArbToken__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes',
            },
        ],
        name: 'bridgeMint',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_bridge',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '_l1Address',
                type: 'address',
            },
            {
                internalType: 'uint8',
                name: '_decimals',
                type: 'uint8',
            },
        ],
        name: 'initialize',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'string',
                name: 'newName',
                type: 'string',
            },
            {
                internalType: 'string',
                name: 'newSymbol',
                type: 'string',
            },
            {
                internalType: 'uint8',
                name: 'newDecimals',
                type: 'uint8',
            },
        ],
        name: 'updateInfo',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'destination',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'withdraw',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
