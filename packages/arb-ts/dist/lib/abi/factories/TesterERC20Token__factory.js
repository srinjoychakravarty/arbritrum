"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TesterERC20Token__factory = void 0;
const contracts_1 = require("@ethersproject/contracts");
class TesterERC20Token__factory extends contracts_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_decimals, _name, _symbol, overrides) {
        return super.deploy(_decimals, _name, _symbol, overrides || {});
    }
    getDeployTransaction(_decimals, _name, _symbol, overrides) {
        return super.getDeployTransaction(_decimals, _name, _symbol, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new contracts_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TesterERC20Token__factory = TesterERC20Token__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_decimals',
                type: 'uint256',
            },
            {
                internalType: 'bytes32',
                name: '_name',
                type: 'bytes32',
            },
            {
                internalType: 'bytes32',
                name: '_symbol',
                type: 'bytes32',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [],
        name: 'decimals',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'name',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'symbol',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
const _bytecode = '0x608060405234801561001057600080fd5b5060405161010b38038061010b8339818101604052606081101561003357600080fd5b508051602082015160409092015160009190915560019190915560025560ad8061005e6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806306fdde03146041578063313ce56714605957806395d89b4114605f575b600080fd5b60476065565b60408051918252519081900360200190f35b6047606b565b60476071565b60015481565b60005481565b6002548156fea26469706673582212202860cce6f6f1e771e64d03433b2f9c8640b1335b14df09e5196e39d45128f12364736f6c634300060b0033';
